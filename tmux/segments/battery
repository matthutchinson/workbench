#!/usr/bin/env bash
set -e

__battery_osx() {
  # icons
  local battery_full="󱊣"
  local battery_med="󱊢"
  local battery_empty="󱊡"
  local battery_charge="󰂄"
  local adapter=""

  # color ranges
  local bg_colors=(088 172 003 002 000)
  local fg_colors=(015 000 000 000 250)

  ioreg -c AppleSmartBattery -w0 |
    grep -o '"[^"]*" = [^ ]*' |
    sed -e 's/= //g' -e 's/"//g' |
    sort |
    while read -r key value; do
      case $key in
        "MaxCapacity")
          export maxcap=$value
          ;;
        "CurrentCapacity")
          export curcap=$value
          ;;
        "ExternalConnected")
          export extconnect=$value
          ;;
        "FullyCharged")
          export fully_charged=$value
          ;;
      esac
      if [[ -n $maxcap && -n $curcap && -n $extconnect ]]; then
        local charge=$(pmset -g batt | grep -o "[0-9][0-9]*\%" | rev | cut -c 2- | rev)
        local charge=99
        local range=$(($charge / (100 / ${#bg_colors[*]})))
        local bg_color=${bg_colors[$range]}
        local fg_color=${fg_colors[$range]}
        local end_segment="#[bg=colour$bg_color,fg=colour236]"
        local status=""

        if [[ ("$fully_charged" == "Yes" || $charge -eq 100) && $extconnect == "Yes" ]]; then
          echo "#[bg=colour016,fg=colour236]"
          return
        fi

        if [[ "$extconnect" == "Yes" ]]; then
          status="$adapter $charge%"
        else
          if [[ $charge -lt 50 ]]; then
            status="$battery_empty $charge%"
          elif [[ $charge -lt 80 ]]; then
            status="$battery_med $charge%"
          else
            status="$battery_full $charge%"
          fi
        fi

        echo "#[bg=colour233,fg=colour$bg_color]#[bg=colour$bg_color,fg=colour$fg_color] $status $end_segment"
        break
      fi
    done
  }

case $(uname -s) in
  "Darwin")
    __battery_osx;;
  esac
