#!/usr/bin/env zsh

################################################################################
# scmpuff - https://github.com/mroth/scmpuff
################################################################################

if hash scmpuff >/dev/null 2>&1; then
  eval "$(scmpuff init -s)"
fi

################################################################################
# master or main local branch name
################################################################################

function git_main_branch {
  git branch | cut -c 3- | grep -E '^master$|^main$'
}


################################################################################
# find when a string in git logs (incl. removals)
################################################################################

function git-search() {
 git log -S"$1" --no-merges -c --pretty=format:'%h %s [%an]'
}

################################################################################
# delete all remote branches, except main and master and production
################################################################################

function git-delete-remote() {
  git branch -r | grep -v 'main\|master\|production' | cut -d'/' -f2- | while read remote; do; git push origin :"$remote"; done
}

################################################################################
# auto-squash with master
################################################################################

function fixup {
  CHANGES=`git status -s`
  if [ -z "$CHANGES" ]
  then
    echo "aborting .. nothing to add or commit"
  else
    REBASE_WITH="main"
    if [ -n "$1" ]
    then
      REBASE_WITH=$1
    fi

    # commit last change as a fixup with previous commit; rebasing with
    # master and auto-squashing (with no editor)
    git add .
    git commit --fixup HEAD
    GIT_SEQUENCE_EDITOR=: git rebase -i --autosquash $REBASE_WITH
  fi
}
