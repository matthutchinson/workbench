[user]
  name = Matthew Hutchinson
  email = matt@hiddenloop.com
  signingkey = 89B04DE88C710FA0
[color]
  status = auto
  diff = auto
  branch = auto
  interactive = auto
[color "branch"]
  current = blue reverse
  local = blue
  remote = green
[color "diff"]
  meta = yellow
  frag = magenta
  old = red
  new = green
[color "status"]
  added = yellow
  changed = green
  untracked = cyan
[alias]
  ctags = !.git/hooks/ctags
	pr = "!funct() { open \"`git web-url`/pull/`git pr-number $1`\" ;}; funct"
  br = branch
  ci = commit
  co = checkout
  staged = diff --cached
  unstaged = diff
  logline = log --pretty=oneline
  amend = commit --amend --no-edit
  plre = pull --rebase
  unstage = reset HEAD
  last = log -p -n1 --pretty=fuller
  today = log --since='1 Day Ago'
  recent = log --stat --since='3 Hours Ago' --graph --pretty=oneline --abbrev-commit --date=relative
  me = log --author='Matthew Hutchinson'
  prune-remotes = remote prune origin
  lol = log --pretty=oneline --abbrev-commit --graph --decorate
	delete-merged = !git branch --merged main | egrep -v \"(^\\*|^  main$)\" | xargs git branch --delete
	delete-gone = !git fetch --prune && git branch --verbose | awk '/\\[gone]/{print $1}' | xargs git branch --delete --force
	upstream = !git push -u origin HEAD

	# see https://tekin.co.uk/2020/06/jump-from-a-git-commit-to-the-pr-in-one-command
	merge-commits = "!funct() { git log --merges --reverse --oneline --ancestry-path $1..origin | grep \"Merge pull request\";  }; funct"
	pr-number = "!funct() { git merge-commits $1 | head -n1 | sed -n \"s/^.*Merge pull request #\\\\s*\\\\([0-9]*\\\\).*$/\\\\1/p\"; }; funct"
	web-url = "!funct() { git config remote.origin.url | sed -e\"s/git@/https:\\/\\//\" -e\"s/\\.git$//\" | sed -E \"s/(\\/\\/[^:]*):/\\1\\//\"; }; funct"
	uncommit = reset --soft HEAD~1
[format]
  # git log uses --pretty format by default, so this changes the default
  # e.g. 4436819 [23 hours ago] (Gabe Berke-Williams) One line prompt
  pretty = %C(yellow)%h%Creset %Cgreen[%cr]%Creset (%an) %s
[help]
  autocorrect = 1
[sendemail]
  smtpserver = smtp.example.com
  aliasesfile = ~/.gitaliases
  aliasfiletype = mailrc
[core]
  legacyheaders = false
  excludesfile = ~/.gitignore
  editor = vim
  attributesfile = ~/.gitattributes
  # Treat spaces before tabs and all kinds of trailing whitespace as an error
  # [default] trailing-space: looks for spaces at the end of a line
  # [default] space-before-tab: looks for spaces before tabs at the beginning of a line
  whitespace = space-before-tab,-indent-with-non-tab,trailing-space
  # Make `git rebase` safer on OS X
  # More info: <http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/>
  trustctime = false
[repack]
  usedeltabaseoffset = true
[apply]
  # Detect whitespace errors when applying a patch
  whitespace = fix
[push]
  # push current branch even if you've never pushed it before
  default = current
[heroku]
	account = personal
[init]
	templatedir = ~/.git_template
	defaultBranch = main
[url "git://github.com/"]
  # Read-only
  insteadOf = gh:
[github]
	user = matthutchinson
[filter "media"]
	required = true
	clean = git-media-clean %f
	smudge = git-media-smudge %f
[filter "lfs"]
    smudge = git-lfs smudge -- %f
    process = git-lfs filter-process
    required = true
    clean = git-lfs clean -- %f
[diff "exif"]
	textconv = exiftool
[merge]
  tool = vimdiff
  conflictStyle = diff3
[mergetool]
  keepBackup = false
  prompt = false
[grep]
	extendedRegexp = true
[rebase]
	autosquash = true
[commit]
	verbose = true
	gpgSign = true
[diff]
	noprefix = true
[diff "rspec"]
  xfuncname = "^[ \t]*((RSpec|describe|context|it|before|after|around|feature|scenario|background)[ \t].*)$"
[pull]
  rebase = true
[pager]
  diff = delta
  log = delta
  reflog = delta
  show = delta
[delta]
  side-by-side = false
  features = decorations
  navigate = true
  whitespace-error-style = 22 reverse
[delta "decorations"]
  commit-decoration-style = bold yellow box ul
  file-style = bold yellow ul
  file-decoration-style = none
  hunk-header-decoration-style = yellow box
[branch]
  sort = -committerdate
[sequence]
  editor = interactive-rebase-tool
[tag]
  forceSignAnnotated = true
[fetch]
  prune = true
[credential]
	helper = osxkeychain
[include]
	path = /Users/matt/.config/dev/gitconfig
