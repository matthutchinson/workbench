#!/bin/sh
#
# An example hook script to prepare the commit log message.  Called by "git
# commit" with the name of the file that has the commit message, followed by the
# description of the commit message's source. The hook's purpose is to edit the
# commit message file. If the hook fails with a non-zero status, the commit is
# aborted.
#
# Current Music playing idea from https://github.com/mroth/git-muzak
#
# see here for details:  https://git-scm.com/docs/githooks#_prepare_commit_msg

prepareTemplateMessage() {
  # grab template file contents (if it exists)
  template_file="$HOME/.git_commit_message_template"
  if [ -f "$template_file" ]
  then
    template_content="\n$(cat $template_file)\n"
  fi

  # add the currently playing iTunes track
  # current_song=`osascript -e 'tell application "Music" to if player state is playing then "\n(â™¬ listening to) : " & artist of current track & " / " & name of current track & "\n"'`

  echo $prefix "short message\n$template_content\n$(cat $1)" > $1
}

# handle various args this script can be invoked with
case "$2,$3" in
  # Commits that already have a message
  commit,?*)
  ;;

  # Messages are one line messages e.g. from -m
  message,)
  ;;

  # when squashing commits
  squash,)
  ;;

  # Merge commits
  merge,)
    # Comments out the "Conflicts:" part of a merge commit.
    # perl -i.bak -ne 's/^/# /, s/^# #/#/ if /^Conflicts/ .. /#/; print' "$1"
  ;;

  # Non-merges with no prior messages
  *)
    prepareTemplateMessage $1
  ;;
esac

